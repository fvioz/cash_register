# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/concurrent-ruby/all/concurrent-ruby.rbi
#
# concurrent-ruby-1.3.5

module Concurrent
  extend Concurrent::Concern::Deprecation
  extend Concurrent::Concern::Logging
  extend Concurrent::Utility::EngineDetector
  extend Concurrent::Utility::NativeExtensionLoader
end
module Concurrent::Utility
end
module Concurrent::Utility::EngineDetector
end
module Concurrent::Collection
end
class Concurrent::Collection::NonConcurrentMapBackend
end
class Concurrent::Collection::MriMapBackend < Concurrent::Collection::NonConcurrentMapBackend
end
class Concurrent::Map < Concurrent::Collection::MriMapBackend
end
module Concurrent::ThreadSafe
end
module Concurrent::ThreadSafe::Util
end
class Concurrent::Hash < Hash
end
class Concurrent::Error < StandardError
end
class Concurrent::ConfigurationError < Concurrent::Error
end
class Concurrent::CancelledOperationError < Concurrent::Error
end
class Concurrent::LifecycleError < Concurrent::Error
end
class Concurrent::ImmutabilityError < Concurrent::Error
end
class Concurrent::IllegalOperationError < Concurrent::Error
end
class Concurrent::InitializationError < Concurrent::Error
end
class Concurrent::MaxRestartFrequencyError < Concurrent::Error
end
class Concurrent::MultipleAssignmentError < Concurrent::Error
end
class Concurrent::RejectedExecutionError < Concurrent::Error
end
class Concurrent::ResourceLimitError < Concurrent::Error
end
class Concurrent::TimeoutError < Concurrent::Error
end
class Concurrent::MultipleErrors < Concurrent::Error
end
class Concurrent::ConcurrentUpdateError < ThreadError
end
module Concurrent::Synchronization
end
class Concurrent::Synchronization::AbstractObject
end
module Concurrent::Utility::NativeExtensionLoader
end
module Concurrent::Synchronization::SafeInitialization
end
module Concurrent::Synchronization::Volatile
end
module Concurrent::Synchronization::Volatile::ClassMethods
end
module Concurrent::AtomicDirectUpdate
end
module Concurrent::AtomicNumericCompareAndSetWrapper
end
class Concurrent::MutexAtomicReference
  extend Concurrent::Synchronization::SafeInitialization
  include Concurrent::AtomicDirectUpdate
  include Concurrent::AtomicNumericCompareAndSetWrapper
end
class Concurrent::AtomicReference < Concurrent::MutexAtomicReference
end
class Concurrent::Synchronization::Object < Concurrent::Synchronization::AbstractObject
  extend Concurrent::Synchronization::Volatile::ClassMethods
  include Concurrent::Synchronization::Volatile
end
class Concurrent::Synchronization::AbstractLockableObject < Concurrent::Synchronization::Object
end
module Concurrent::Synchronization::ConditionSignalling
end
class Concurrent::Synchronization::MutexLockableObject < Concurrent::Synchronization::AbstractLockableObject
  extend Concurrent::Synchronization::SafeInitialization
  include Concurrent::Synchronization::ConditionSignalling
end
class Concurrent::Synchronization::MonitorLockableObject < Concurrent::Synchronization::AbstractLockableObject
  extend Concurrent::Synchronization::SafeInitialization
  include Concurrent::Synchronization::ConditionSignalling
end
class Concurrent::Synchronization::LockableObject < Concurrent::Synchronization::MutexLockableObject
end
class Concurrent::Event < Concurrent::Synchronization::LockableObject
end
module Concurrent::Concern
end
module Concurrent::Concern::Dereferenceable
end
module Concurrent::Concern::Obligation
  include Concurrent::Concern::Dereferenceable
end
module Concurrent::Concern::Logging
end
module Concurrent::Concern::Deprecation
  extend Concurrent::Concern::Deprecation
  include Concurrent::Concern::Logging
end
module Concurrent::ExecutorService
  include Concurrent::Concern::Logging
end
class Concurrent::AbstractExecutorService < Concurrent::Synchronization::LockableObject
  include Concurrent::Concern::Deprecation
  include Concurrent::ExecutorService
end
module Concurrent::SerialExecutorService
  include Concurrent::ExecutorService
end
class Concurrent::ImmediateExecutor < Concurrent::AbstractExecutorService
  include Concurrent::SerialExecutorService
end
class Concurrent::Delay < Concurrent::Synchronization::LockableObject
  include Concurrent::Concern::Obligation
end
class Concurrent::RubyExecutorService < Concurrent::AbstractExecutorService
end
class Concurrent::RubyThreadPoolExecutor < Concurrent::RubyExecutorService
end
class Concurrent::RubyThreadPoolExecutor::Worker
  include Concurrent::Concern::Logging
end
class Concurrent::ThreadPoolExecutor < Concurrent::RubyThreadPoolExecutor
end
class Concurrent::FixedThreadPool < Concurrent::ThreadPoolExecutor
end
class Concurrent::CachedThreadPool < Concurrent::ThreadPoolExecutor
end
class Concurrent::Utility::ProcessorCounter
end
class Concurrent::MutexAtomicBoolean
  extend Concurrent::Synchronization::SafeInitialization
end
class Concurrent::AtomicBoolean < Concurrent::MutexAtomicBoolean
end
module Concurrent::Utility::NativeInteger
  extend Concurrent::Utility::NativeInteger
end
class Concurrent::MutexAtomicFixnum
  extend Concurrent::Synchronization::SafeInitialization
end
class Concurrent::AtomicFixnum < Concurrent::MutexAtomicFixnum
end
class Concurrent::CyclicBarrier < Concurrent::Synchronization::LockableObject
end
class Concurrent::MutexCountDownLatch < Concurrent::Synchronization::LockableObject
end
class Concurrent::CountDownLatch < Concurrent::MutexCountDownLatch
end
class Concurrent::Synchronization::Lock < Concurrent::Synchronization::LockableObject
end
class Concurrent::ReadWriteLock < Concurrent::Synchronization::Object
  extend Concurrent::Synchronization::SafeInitialization
end
class Concurrent::AbstractLocals
end
class Concurrent::ThreadLocals < Concurrent::AbstractLocals
end
class Concurrent::FiberLocals < Concurrent::AbstractLocals
end
class Concurrent::FiberLocalVar
end
class Concurrent::ThreadLocalVar
end
class Concurrent::ReentrantReadWriteLock < Concurrent::Synchronization::Object
  extend Concurrent::Synchronization::SafeInitialization
end
class Concurrent::MutexSemaphore < Concurrent::Synchronization::LockableObject
end
class Concurrent::Semaphore < Concurrent::MutexSemaphore
end
class Concurrent::SimpleExecutorService < Concurrent::RubyExecutorService
end
class Concurrent::IndirectImmediateExecutor < Concurrent::ImmediateExecutor
end
class Concurrent::RubySingleThreadExecutor < Concurrent::RubyThreadPoolExecutor
end
class Concurrent::SafeTaskExecutor < Concurrent::Synchronization::LockableObject
end
class Concurrent::SerializedExecution < Concurrent::Synchronization::LockableObject
  include Concurrent::Concern::Logging
end
class Concurrent::SerializedExecutionDelegator < SimpleDelegator
  include Concurrent::SerialExecutorService
end
class Concurrent::SingleThreadExecutor < Concurrent::RubySingleThreadExecutor
end
class Concurrent::Collection::CopyOnWriteObserverSet < Concurrent::Synchronization::LockableObject
end
class Concurrent::Collection::CopyOnNotifyObserverSet < Concurrent::Synchronization::LockableObject
end
module Concurrent::Concern::Observable
end
class Concurrent::IVar < Concurrent::Synchronization::LockableObject
  include Concurrent::Concern::Obligation
  include Concurrent::Concern::Observable
end
module Concurrent::Options
end
class Concurrent::ScheduledTask < Concurrent::IVar
  include Comparable
end
class Concurrent::Collection::RubyNonConcurrentPriorityQueue
end
class Concurrent::Collection::NonConcurrentPriorityQueue < Concurrent::Collection::RubyNonConcurrentPriorityQueue
end
class Concurrent::TimerSet < Concurrent::RubyExecutorService
end
class Concurrent::Synchronization::Condition < Concurrent::Synchronization::LockableObject
end
class Concurrent::AtomicMarkableReference < Concurrent::Synchronization::Object
  extend Concurrent::Synchronization::SafeInitialization
end
class Concurrent::Agent < Concurrent::Synchronization::LockableObject
  include Concurrent::Concern::Observable
end
class Concurrent::Agent::Error < StandardError
end
class Concurrent::Agent::ValidationError < Concurrent::Agent::Error
end
class Concurrent::Atom < Concurrent::Synchronization::Object
  extend Concurrent::Synchronization::SafeInitialization
  include Concurrent::Concern::Observable
end
class Concurrent::Array < Array
end
class Concurrent::CRubySet < Set
end
class Concurrent::Set < Concurrent::CRubySet
end
class Concurrent::Tuple
  include Enumerable
end
module Concurrent::Async
end
module Concurrent::Async::ClassMethods
end
class Concurrent::Async::AsyncDelegator < Concurrent::Synchronization::LockableObject
end
class Concurrent::Async::AwaitDelegator
end
class Concurrent::Future < Concurrent::IVar
end
class Concurrent::DependencyCounter
end
class Concurrent::Maybe < Concurrent::Synchronization::Object
  extend Concurrent::Synchronization::SafeInitialization
  include Comparable
end
class Concurrent::AbstractExchanger < Concurrent::Synchronization::Object
end
class Concurrent::RubyExchanger < Concurrent::AbstractExchanger
  extend Concurrent::Synchronization::SafeInitialization
end
class Concurrent::RubyExchanger::Node < Concurrent::Synchronization::Object
  extend Concurrent::Synchronization::SafeInitialization
end
class Concurrent::Exchanger < Concurrent::RubyExchanger
end
module Concurrent::Synchronization::AbstractStruct
end
module Concurrent::ImmutableStruct
  include Concurrent::Synchronization::AbstractStruct
end
module Concurrent::MutableStruct
  include Concurrent::Synchronization::AbstractStruct
end
class Concurrent::MVar < Concurrent::Synchronization::Object
  extend Concurrent::Synchronization::SafeInitialization
  include Concurrent::Concern::Dereferenceable
end
class Concurrent::PromiseExecutionError < StandardError
end
class Concurrent::Promise < Concurrent::IVar
end
module Concurrent::SettableStruct
  include Concurrent::Synchronization::AbstractStruct
end
class Concurrent::TimerTask < Concurrent::RubyExecutorService
  include Concurrent::Concern::Dereferenceable
  include Concurrent::Concern::Observable
end
class Concurrent::TVar < Concurrent::Synchronization::Object
  extend Concurrent::Synchronization::SafeInitialization
end
class Concurrent::Transaction
end
class Concurrent::Transaction::AbortError < StandardError
end
class Concurrent::Transaction::LeaveError < StandardError
end
class Concurrent::LockFreeStack < Concurrent::Synchronization::Object
  extend Concurrent::Synchronization::SafeInitialization
  include Enumerable
end
class Concurrent::LockFreeStack::Node
end
module Concurrent::ReInclude
end
module Concurrent::Promises
  extend Concurrent::Promises::FactoryMethods
end
module Concurrent::Promises::FactoryMethods
  extend Concurrent::Promises::FactoryMethods
  extend Concurrent::Promises::FactoryMethods::Configuration
  extend Concurrent::ReInclude
  include Concurrent::Promises::FactoryMethods::Configuration
end
module Concurrent::Promises::FactoryMethods::Configuration
end
module Concurrent::Promises::InternalStates
end
class Concurrent::Promises::InternalStates::State
end
class Concurrent::Promises::InternalStates::Pending < Concurrent::Promises::InternalStates::State
end
class Concurrent::Promises::InternalStates::Reserved < Concurrent::Promises::InternalStates::Pending
end
class Concurrent::Promises::InternalStates::ResolvedWithResult < Concurrent::Promises::InternalStates::State
end
class Concurrent::Promises::InternalStates::Fulfilled < Concurrent::Promises::InternalStates::ResolvedWithResult
end
class Concurrent::Promises::InternalStates::FulfilledArray < Concurrent::Promises::InternalStates::Fulfilled
end
class Concurrent::Promises::InternalStates::Rejected < Concurrent::Promises::InternalStates::ResolvedWithResult
end
class Concurrent::Promises::InternalStates::PartiallyRejected < Concurrent::Promises::InternalStates::ResolvedWithResult
end
class Concurrent::Promises::AbstractEventFuture < Concurrent::Synchronization::Object
  extend Concurrent::Synchronization::SafeInitialization
  include Concurrent::Promises::InternalStates
end
class Concurrent::Promises::Event < Concurrent::Promises::AbstractEventFuture
end
class Concurrent::Promises::Future < Concurrent::Promises::AbstractEventFuture
end
module Concurrent::Promises::Resolvable
  include Concurrent::Promises::InternalStates
end
class Concurrent::Promises::ResolvableEvent < Concurrent::Promises::Event
  include Concurrent::Promises::Resolvable
end
class Concurrent::Promises::ResolvableFuture < Concurrent::Promises::Future
  include Concurrent::Promises::Resolvable
end
class Concurrent::Promises::AbstractPromise < Concurrent::Synchronization::Object
  extend Concurrent::Synchronization::SafeInitialization
  include Concurrent::Promises::InternalStates
end
class Concurrent::Promises::ResolvableEventPromise < Concurrent::Promises::AbstractPromise
end
class Concurrent::Promises::ResolvableFuturePromise < Concurrent::Promises::AbstractPromise
end
class Concurrent::Promises::InnerPromise < Concurrent::Promises::AbstractPromise
end
class Concurrent::Promises::BlockedPromise < Concurrent::Promises::InnerPromise
end
class Concurrent::Promises::BlockedTaskPromise < Concurrent::Promises::BlockedPromise
end
class Concurrent::Promises::ThenPromise < Concurrent::Promises::BlockedTaskPromise
end
class Concurrent::Promises::RescuePromise < Concurrent::Promises::BlockedTaskPromise
end
class Concurrent::Promises::ChainPromise < Concurrent::Promises::BlockedTaskPromise
end
class Concurrent::Promises::ImmediateEventPromise < Concurrent::Promises::InnerPromise
end
class Concurrent::Promises::ImmediateFuturePromise < Concurrent::Promises::InnerPromise
end
class Concurrent::Promises::AbstractFlatPromise < Concurrent::Promises::BlockedPromise
end
class Concurrent::Promises::FlatEventPromise < Concurrent::Promises::AbstractFlatPromise
end
class Concurrent::Promises::FlatFuturePromise < Concurrent::Promises::AbstractFlatPromise
end
class Concurrent::Promises::RunFuturePromise < Concurrent::Promises::AbstractFlatPromise
end
class Concurrent::Promises::ZipEventEventPromise < Concurrent::Promises::BlockedPromise
end
class Concurrent::Promises::ZipFutureEventPromise < Concurrent::Promises::BlockedPromise
end
class Concurrent::Promises::EventWrapperPromise < Concurrent::Promises::BlockedPromise
end
class Concurrent::Promises::FutureWrapperPromise < Concurrent::Promises::BlockedPromise
end
class Concurrent::Promises::ZipFuturesPromise < Concurrent::Promises::BlockedPromise
end
class Concurrent::Promises::ZipEventsPromise < Concurrent::Promises::BlockedPromise
end
class Concurrent::Promises::AbstractAnyPromise < Concurrent::Promises::BlockedPromise
end
class Concurrent::Promises::AnyResolvedEventPromise < Concurrent::Promises::AbstractAnyPromise
end
class Concurrent::Promises::AnyResolvedFuturePromise < Concurrent::Promises::AbstractAnyPromise
end
class Concurrent::Promises::AnyFulfilledFuturePromise < Concurrent::Promises::AnyResolvedFuturePromise
end
class Concurrent::Promises::DelayPromise < Concurrent::Promises::InnerPromise
end
class Concurrent::Promises::ScheduledPromise < Concurrent::Promises::InnerPromise
end
class Concurrent::SynchronizedDelegator < SimpleDelegator
end
