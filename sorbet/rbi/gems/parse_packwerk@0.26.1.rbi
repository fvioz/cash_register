# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `parse_packwerk` gem.
# Please instead update this file by running `bin/tapioca gem parse_packwerk`.


# source://parse_packwerk//lib/parse_packwerk/constants.rb#23
ParsePackwerk::DEFAULT_EXCLUDE_GLOBS = T.let(T.unsafe(nil), Array)

# source://parse_packwerk//lib/parse_packwerk/constants.rb#24
ParsePackwerk::DEFAULT_PACKAGE_PATHS = T.let(T.unsafe(nil), Array)

# source://parse_packwerk//lib/parse_packwerk/constants.rb#25
ParsePackwerk::DEFAULT_PUBLIC_PATH = T.let(T.unsafe(nil), String)

# source://parse_packwerk//lib/parse_packwerk/constants.rb#15
ParsePackwerk::DEPENDENCIES = T.let(T.unsafe(nil), String)

# source://parse_packwerk//lib/parse_packwerk/constants.rb#11
ParsePackwerk::DEPENDENCY_VIOLATION_TYPE = T.let(T.unsafe(nil), String)

# source://parse_packwerk//lib/parse_packwerk/constants.rb#8
ParsePackwerk::ENFORCE_DEPENDENCIES = T.let(T.unsafe(nil), String)

# source://parse_packwerk//lib/parse_packwerk/constants.rb#10
ParsePackwerk::ENFORCE_LAYERS = T.let(T.unsafe(nil), String)

# source://parse_packwerk//lib/parse_packwerk/constants.rb#9
ParsePackwerk::ENFORCE_PRIVACY = T.let(T.unsafe(nil), String)

# source://parse_packwerk//lib/parse_packwerk/constants.rb#14
ParsePackwerk::METADATA = T.let(T.unsafe(nil), String)

# Since this metadata is unstructured YAML, it could be any type. We leave it to clients of `ParsePackwerk::Package`
# to add types based on their known usage of metadata.
#
# source://parse_packwerk//lib/parse_packwerk/constants.rb#19
ParsePackwerk::MetadataYmlType = T.type_alias { T::Hash[T.untyped, T.untyped] }

# source://parse_packwerk//lib/parse_packwerk/constants.rb#7
ParsePackwerk::PACKAGE_TODO_YML_NAME = T.let(T.unsafe(nil), String)

# source://parse_packwerk//lib/parse_packwerk/constants.rb#5
ParsePackwerk::PACKAGE_YML_NAME = T.let(T.unsafe(nil), String)

# source://parse_packwerk//lib/parse_packwerk/constants.rb#6
ParsePackwerk::PACKWERK_YML_NAME = T.let(T.unsafe(nil), String)

# source://parse_packwerk//lib/parse_packwerk/constants.rb#12
ParsePackwerk::PRIVACY_VIOLATION_TYPE = T.let(T.unsafe(nil), String)

# source://parse_packwerk//lib/parse_packwerk/constants.rb#13
ParsePackwerk::PUBLIC_PATH = T.let(T.unsafe(nil), String)

class ParsePackwerk::PackageParseError < ::StandardError; end

# source://parse_packwerk//lib/parse_packwerk/constants.rb#4
ParsePackwerk::ROOT_PACKAGE_NAME = T.let(T.unsafe(nil), String)
